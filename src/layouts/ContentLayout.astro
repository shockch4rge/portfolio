---
import type { MarkdownHeading } from "astro";

import BaseLayout from "./BaseLayout.astro";
import Toc from "@content/components/toc/Toc.astro";
import type { InferEntrySchema } from "astro:content";

interface Props {
	title: string;
	headings: MarkdownHeading[];
	tags: InferEntrySchema<"projects" | "blog">["tags"];
}

const { title, headings } = Astro.props;
---

<BaseLayout title={title}>
	<article
		class:list={[
			"*:not-[#toc]:col-start-1 md:*:not-[#toc]:col-start-2",
			"px-8 sm:px-12 py-16 min-h-screen grid grid-cols-1 justify-center",
			"sm:px-20",
			"md:px-0 md:grid-cols-[1fr_var(--content-article-md)_1fr]",
			"lg:grid-cols-[1fr_var(--content-article-lg)_var(--content-toc-lg)_1fr]",
			"2lg:grid-cols-[1fr_var(--content-article-lg)_var(--content-toc-lg)_1fr]",
			"xl:grid-cols-[1fr_var(--content-article-xl)_var(--content-toc-xl)_1fr]",
			"2xl:grid-cols-[1fr_var(--content-article-2xl)_var(--content-toc-xl)_1fr]",
		]}
	>
		<slot />
		<Toc headings={headings} />
	</article>
	<slot name="related-projects" />
	<slot name="related-blogs" />
</BaseLayout>

<style is:global>
	@reference "../../tailwind.css";

	h1 {
		@apply text-5xl mb-14;
	}

	section {
		@apply my-8 first-of-type:mt-20 last-of-type:mb-0 not-[section_&]:last-of-type:[&_>_p]:mb-0;

		& > section {
			@apply my-12;
		}

		& > p {
			@apply mb-6 text-pretty tracking-[0.01rem];
		}

		& > :is(h2, h3) {
			@apply text-primary scroll-mt-28;
		}

		& > h2 {
			@apply mb-8 text-3xl;
		}

		& > h3 {
			@apply mt-16 mb-8 text-xl text-pretty font-bold tracking-[0.2rem] font-display uppercase;
		}

		& > ol {
			@apply ml-10 mb-12 text-white space-y-4 text-lg;
		}
	}

	.expressive-code {
		@apply -mx-8 mt-8 mb-12 frame-border;

		& > figure.frame {
			@apply border-none;

			& > pre {
				@apply p-2 rounded-none sm:rounded-md border-0 border-none bg-black/20;
			}

			&.has-title {
				overflow: hidden;

				& > pre {
					@apply sm:rounded-b-md;
				}

				& > figcaption.header {
					@apply bg-gray-950 rounded-none sm:rounded-t-md [background:none];

					&::before {
						@apply border-none!;
					}

					& > span.title {
						@apply rounded-none sm:rounded-t-sm;

						&::after {
							@apply border-none;
						}
					}
				}
			}
		}
	}

	code:not(.expressive-code code) {
		@apply p-1 rounded-sm text-sm bg-gray-800/80 whitespace-nowrap;
	}

	figcaption code {
		@apply text-xs;
	}
</style>
