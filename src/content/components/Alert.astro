---
interface Props {
	title: string;
	type: "info" | "warning" | "error" | "success";
}

const { type, title } = Astro.props;
---

<aside
	id="alert"
	data-type={type}
	class:list={[
		"[&_p]:not-last:mb-4 [&_p]:text-white [&_p]:font-body [&_p]:text-base",
		"[&_a,p]:text-base",
		"-mx-8 mt-8 mb-12 px-7 py-6 rounded-xs not-prose relative",
		{
			"bg-blue-950/40 border-l-4 border-l-blue-300/60": type === "info",
			"bg-green-950/40 border-l-4 border-l-green-300/60": type === "success",
			"bg-yellow-900/20 border-l-4 border-l-yellow-300/60": type === "warning",
			"bg-red-900/20 border-l-4 border-l-red-400/60": type === "error",
		},
	]}
>
	<h4
		class:list={[
			"mb-4 text-lg font-bold font-body",
			{
				"text-blue-400": type === "info",
				"text-green-400": type === "success",
				"text-yellow-400": type === "warning",
				"text-red-400": type === "error",
			},
		]}
	>
		{title}
	</h4>
	<slot />
</aside>

<style is:global>
	@reference "../../../tailwind.css";

	#alert {
		&[data-type="info"] pre {
			@apply bg-slate-900/80 border-2 border-l-blue-500;
		}

		&[data-type="success"] pre {
			@apply bg-green-900/20;
		}

		.expressive-code {
			@apply -mx-4;
		}

		&[data-type="info"] .expressive-code .frame.has-title .header {
			@apply !bg-slate-950/70 !rounded-sm;
		}

		&[data-type="success"] pre {
			@apply bg-green-900/20;
		}
	}
</style>
